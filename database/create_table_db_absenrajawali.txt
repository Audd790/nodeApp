create table karyawan(
 nik varchar(30),
 nama varchar(30),
 pass varchar(30),
 departemen varchar(30),
 primary key (nik));

(1, 'admin', 'pass', 'admin'),
(1111001, 'sujilan', 'pass', 'security')

insert into karyawan(nik, nama, departemen)
values (1112002, 'nartin rasboenga', 'staff'),
(1113003, 'WINA DAMAYANI', 'STAFF'),
(1113004, 'SULAIN', 'STAFF'),
(1113006, 'RONALD YANSEN KOMANSILAN','STAFF'),
(1114007, 'INDAH LESTARI','STAFF'),
(1114008,'PARTO','SECURITY'),
(1114009, 'FEBRIANSYAH','STAFF'),
(1114061, 'PUTRI RISTI INDRIYANI','STAFF'),
(1115010, 'YESSE PUTRI DEBITHA','STAFF'),
(1116013, 'DEDE JUBAEDAH','STAFF');

create table role(
 id int,
 role varchar(30),
 primary key (id));

create table kehadiran(
 nik varchar(30),
 tgl_absen date,
 hadir int,
 telat int,
 lembur int,
 jam_kerja int,
 primary key (nik,tgl_absen));

create table divisi(
 id varchar(30),
 namaDivisi varchar(30),
 primary key (id));

create view jumlah_telat as
select nik, 
count(telat) as jumlah_telat
from kehadiran
where telat>0
group by nik;

create table sakit(
id int primary key,
nik varchar(255),
surat_dokter varchar(255),
tgl_sakit date,
constraint fk_nik_sakit foreign key (nik)
references karyawan(nik))
; 

create table cuti(
   id int primary key,
   nik varchar(255),
   jumlah cuti int,
);

UPDATE kehadiran
   SET telat= CASE config_name 
                      WHEN 'name1' THEN 'value' 
                      WHEN 'name2' THEN 'value2' 
                      ELSE config_value
                      END
 WHERE config_name IN('name1', 'name2');

//make view
create or replace view jumlahMenitTelat as
select nik, sum(telat) as total_menit_telat, sum(telat)/60 as dalam_jam
from kehadiran
where year(tgl_absen) = 2024
group by nik;

create or replace view jumlahHariTelat as
select sum(case when telat > 0 then 1 else 0 end) as jumlah_hari_telat
from kehadiran
where year(tgl_absen) = 2024
group by nik;

select distinct jumlahHariTelat.nik, jumlahHariTelat.jumlah_hari_telat
from jumlahHariTelat
INNER JOIN kehadiran ON jumlahHariTelat.nik=kehadiran.nik;

insert into divisi(id, namaDivisi)
values
('D01', 'Admin Sales & Engineer'),
('D02', 'ERP'),
('D03','Estimator'),
('D04','Finance & Accounting'),
('D05','GTI'),
('D06', 'Logistik'),
('D07','MEP'),
('D08','Operation'),
('D09', 'PCS'),
('D10', 'PPJM'),
('D11', 'Purchasing'),
('D12', 'RPE'),
('D13','Sales'),
('D14','Service'),
('D15','Team Bali'),
('D16', 'Teknisi TC');


create table kehadiranTotal(
   nama varchar(30),
   idDivisi varchar(30),
   jumlahMenitTerlambat int,
   jumlahJamTerlambat int,
   JumlahHariTerlambat int,
   month date
);

LOAD DATA LOCAL INFILE 'C:/Users/Operation/Desktop/Auddly/database/data telat/Telat.csv' 
INTO TABLE kehadiranTotal
FIELDS TERMINATED BY ',' 
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS 

(nama, idDivisi, jumlahMenitTerlambat, jumlahJamTerlambat, JumlahHariTerlambat, month)

UPDATE kehadiran a
JOIN tmp b ON trim(lower(a.nama)) = trim(lower(b.nama) )
SET a.telat = b.jumlahMenitTerlambat;

INSERT INTO kehadiran (telat)
SELECT jumlahMenitTerlambat FROM tmp WHERE nama IN (SELECT nama FROM table);

UPDATE kehadiran a
JOIN karyawan b ON b.nik = a.nik
JOIN tmp c on trim(lower(c.nama)) = trim(lower(b.nama))
set a.telat= c.jumlahMenitTerlambat
where month(tgl_absen) = 6;


select a.nama, b.idDivisi
from kehadirantotaljan as a
left outer JOIN kehadirantotalfeb as b on b.nama = a.nama
union
select a.nama, b.idDivisi
from kehadirantotaljan as a
right outer JOIN kehadirantotalfeb as b on b.nama = a.nama

set global local_infile = 0

mysql --local-infile=0 -u root -p

select count(id),0,0
from divisi
union

select namaDivisi as nama,0 as menitTelat,0 as jamTelat
from divisi
union
select monthname(month),jumlahMenitTerlambat , JumlahHariTerlambat 
from kehadiranTotal
where idDivisi = 'D02'
order by month

select monthname(month), sum(jumlahMenitTerlambat) as menitTelat, sum(JumlahHariTerlambat) as jamTelat
from kehadiranTotal
where idDivisi = 'D01'
group by month;

select *
from kehadiranTotal
where idDivisi = 'D01'
group by month

create or replace view telat_per_karyawan as
select nama, monthname(tgl_absen) as bulan, year(tgl_absen) as tahun, 
count(telat) as telat_per_bulan, sum(telat) total_menit_per_bulan, 
sum(telat)/60 as total_jam_per_bulan
from kehadiran 
where telat>0 
group by nama,bulan,tahun
order by nama;

create or replace view telat_per_divisi as
select b.divisi, monthname(a.tgl_absen) as bulan, year(a.tgl_absen) as tahun, 
count(a.telat) as telat_per_bulan, round(sum(a.telat)/count(b.divisi),2) total_menit_per_bulan, 
round((sum(a.telat)/count(b.divisi))/60,2) as total_jam_per_bulan
from kehadiran a
join user b 
on b.nama = a.nama
where a.telat>0 and year(a.tgl_absen) = "2024"
group by b.divisi, bulan, tahun
order by b.divisi;

alter table izinkaryawan
add column myTimestamp timestamp default current_timestamp

select monthname(month) as bulan, idDivisi, 
avg(jumlahMenitTerlambat) as menitTelat, avg(jumlahJamTerlambat) as jamTelat, sum(JumlahHariTerlambat) 
from kehadirantotal group by idDivisi, month
order by  idDivisi, month; 

delimiter //
create trigger allowCuti
after update
on sakit
for each row 
begin 
   insert into izinkaryawan(nik,alasan,tgl_izin,durasi_dalam_jam,isSakit)
   values(new.nik, 'sakit', new.tgl_sakit, 24, true);
end;//
delimiter ;


values('1122120','projek','2024-05-01',5,false)
insert into izinkaryawan(nik,alasan,tgl_izin,durasi_dalam_jam,isCuti)
select nik,alasan,tgl_izin,durasi_dalam_jam,isCuti from izinkaryawan limit 1;

create table cuti(
   nik varchar(255),
   jumlah_cuti int,
   constraint fk_cuti_nik foreign key (nik)
   references karyawan(nik)
);

insert into cuti(nik)
SELECT nik FROM karyawan;

update cuti
set jumlah_cuti = 6;

mysqldump -u root -p absenrajawali > C:\Users\Operation\Desktop\Auddly\nodeApp\database\absenrajawaliDB.sql

create table statusIzin(
   id int primary key auto_increment,

)

drop event cutiPerBulan;
drop event cutiPerTahun;

update cuti set n_1=6, n_2=6, sisa_cuti=-1, total_cuti=12;

delimiter //
create event cutiPerBulan
on schedule
every 5 second starts '2024-09-06 11:41:00' + interval 5 second
do 
   begin
      update cuti
      set sisa_cuti = sisa_cuti + 1,
      total_cuti = n_1+n_2+sisa_cuti;
   end;//
delimiter ;

delimiter //
create event cutiPerTahun
on schedule
every 1 minute starts '2024-09-06 11:41:00' + interval 1 minute + interval 5 second
do 
   begin
      update cuti
      set n_2 = n_1
      , n_1 = 
      case 
         when sisa_cuti > 6 then 6
         else sisa_cuti
      end
      ,jumlah_cuti = 0, sisa_cuti = 0
      , total_cuti = n_1+n_2+sisa_cuti+1;
   end;//
delimiter ;

select * from cuti where nama = 'M AUDDLY FAUZAN';
SET @jumlah_cuti = 8;
update cuti set jumlah_cuti = @jumlah_cuti, sisa_cuti = sisa_cuti-@jumlah_cuti, total_cuti = n_1+n_2+sisa_cuti;
delimiter //
create trigger ambilCuti
after update
on izinkaryawan
for each row 
begin 
   if (old.alasan = 3 and new.status = 2) then
   update cuti 
   set jumlah_cuti = jumlah_cuti + (1*new.hari)
   where nama = new.nama;
   end if;
end;//
delimiter ;

delimiter //
create trigger cuti_max
before insert
on izinkaryawan
for each row 
begin

   if((select jumlah_cuti from cuti_ where nama = new.nama) > month(current_timestamp) and old.alasan = 3 and new.status = 2) then
   SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'tidak bisa cuti, batas cuti akan dilewati';
   end if;
end;//
delimiter ;

delimiter //
create trigger updateCuti
before update
on cuti
for each row 
begin 
   
end;//
delimiter ;

insert into izinkaryawan(nama,alasan,tgl_izin, jam)
values('BAYU AJI PRABOWO', 3, '2024-05-01', 3);

create table user(
   nama varchar(255),
   pass varchar(255),
   role int
);

insert into user(nama, pass, role)
values ('APPROVE', 'pass', 3);

create table app(
   id int auto_increment primary key,
   nama varchar(255),
   divisi varchar(255)
)

select a.id, b.divisi, a.hari as jumlah_hari, a.alasan, a.nama, a.startMenit,
a.startJam, a.endMenit, a.endJam, day(a.tgl_izin) as hari, month(a.tgl_izin) as bulan,
monthname(a.tgl_izin) as bulanNama, year(a.tgl_izin) as tahun, a.surat, a.status, a.keterangan 
from izinkaryawan a
join karyawan b on a.nama = b.nama
where status not in (2,3) 
order by tahun, bulan;

(APPR_JO, APPR_SW, APPR_NR, APPR_BO, APPR_SI, APPR_YU, APPR_NA)

//Create view for jumlah_cuti and 

create table status_izin{
   
}